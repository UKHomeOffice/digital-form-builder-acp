kind: pipeline
name: designer
type: kubernetes
trigger:
  branch: main
  event:
    - push
    - tag
steps:
  - name: setup tags
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - source .env
      - echo "Current XGOV tag $${XGOV_TAG}"
      - echo $${XGOV_TAG} > .tags
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
  - name: ecr-login
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/dind-awscli:19.03.12-dind-1.18.55
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: DESIGNER_AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: DESIGNER_AWS_SECRET_ACCESS_KEY
      AWS_REGION: eu-west-2
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - aws ecr get-login-password --region $${AWS_REGION} | docker login --username AWS --password-stdin 340268328991.dkr.ecr.$${AWS_REGION}.amazonaws.com
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
    depends_on:
      - setup tags
  - name: build docker tag
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - export BASE_IMAGE_TAG=$(cat .tags)
      - echo "Using base image  from TAG - $BASE_IMAGE_TAG"
      - bin/env.sh
      - docker build --build-arg BASE_IMAGE_TAG=$${BASE_IMAGE_TAG} -t digital-form-builder-designer:$${DRONE_COMMIT_SHA} -t digital-form-builder-designer:latest designer/. --no-cache
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
    depends_on:
      - setup tags
  - name: anchore scan
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    environment:
      IMAGE_NAME: digital-form-builder-designer:${DRONE_COMMIT_SHA}
      WHITELIST: CVE-2020-7788,CVE-2020-7774,CVE-2017-18589,CVE-2020-7769,CVE-2017-18589
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
    depends_on:
      - build docker tag
  - name: trigger dev deploy
    image: plugins/downstream
    settings:
      server: drone-gh.acp.homeoffice.gov.uk
      deploy: development
      token:
        from_secret: downstream-trigger-token
      params:
        - SOURCE_HASH=${DRONE_COMMIT_HASH}
        - APP=digital-form-builder-designer
      last_successful: true
      repositories:
        - UKHomeOffice/digital-form-builder-acp-deploy
    depends_on:
      - anchore scan
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server

volumes:
  - name: dockerclientconfig
    temp: {}
    
---
kind: pipeline
name: smoke-tests
type: kubernetes

trigger:
  branch: main
  event:
    - push
    - tag
steps:
  - name: clone xgov
    image: alpine/git
    commands:
      - bin/env.sh
      - source .env && echo "XXXX $${XGOV_SHA} $${BASE_IMAGE_APP_SHA}"
      - env
      - git clone https://github.com/XGovFormBuilder/digital-form-builder/
      - cd digital-form-builder
      - git checkout $${XGOV_SHA}
  # find cached node_modules by the file 'yarn.lock'
  - name: load-yarn-cache
    image: sinlead/drone-cache:1.0.0
    settings:
      action: load
      key: yarn.lock
      mount: node_modules
      prefix: yarn-modules-v1
    volumes:
      - name: cache
        path: /cache
  - name: yarn-install
    image: node:11-alpine
    commands:
      - source .env && echo "XXXX $${XGOV_SHA}"
      - env
      - git clone https://github.com/XGovFormBuilder/digital-form-builder/
      - cd digital-form-builder
      - git checkout $${XGOV_SHA}
      - yarn
      - yarn build:dependencies
  # save installed node_modules to cache
  - name: save-yarn-cache
    image: sinlead/drone-cache:1.0.0
    settings:
      action: save
      key: yarn.lock
      mount: node_modules
      prefix: yarn-modules-v1
    volumes:
      - name: cache
        path: /cache
depends_on:
  - designer
volumes:
  - name: cache
    path: /tmp/cache